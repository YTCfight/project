User 类：父类

abstract public class User {
    protected String name;

    public User(String name) {
        this.name = name;
    }

    //持有当前用户支持的操作对象
    protected IOperation[] operations;

    //打印一个操作菜单，不同的用户支持的操作不同，对应的菜单也就不同
    abstract public int menu();

    //根据用户输入的选项（menu的返回结果）
    //调用对应的操作对象
    //注意多态在这个代码中的体现
    public void doOperation(int choice, BookList bookList) {
        operations[choice].work(bookList);
    }
}

Admin 类：管理员

public class Admin extends User {
    public Admin(String name) {
        super(name);
        operations = new IOperation[] {
          new ExitOpreation(),
          new FindOperation(),
          new AddOperation(),
          new Deloperation(),
          new PrintAllOperation()
        };
    }

    @Override
        public int menu() {
        System.out.println("----------------");
        System.out.println("hello " + name);
        System.out.println("1.查找图书");
        System.out.println("2.增加图书");
        System.out.println("3.删除图书");
        System.out.println("4.打印所有信息");
        System.out.println("0.退出");
        System.out.println("----------------");
        System.out.println("请输您的选择: ");
        Scanner scanner = new Scanner(System.in);
        int choice = scanner.nextInt();
        return choice;
    }
}

NormalUser 类：普通用户

public class NormalUser extends User {
    public NormalUser(String name) {
        super(name);
        //在这里构造 operation 数组
        //让我们数组中的 operation 对象的顺序和菜单中的序号相匹配
        operations = new IOperation[] {
                new ExitOpreation(),
                new FindOperation(),
                new BorrowOperation(),
                new ReturnOperation(),
                new PrintAllOperation()
        };
    }

    @Override
    public int menu() {
        System.out.println("----------------");
        System.out.println("hello " + name);
        System.out.println("1.查找图书");
        System.out.println("2.借阅图书");
        System.out.println("3.归还图书");
        System.out.println("4.打印所有图书信息");
        System.out.println("0.退出");
        System.out.println("----------------");
        System.out.println("请输入您的选择： ");
        Scanner scanner = new Scanner(System.in);
        int choice = scanner.nextInt();
        //close 本质上是在关闭 System.in
        //后面还要用到 System.in ，此处不能盲目关闭
        //scanner.close();
        return choice;
    }
}
